name: Sync master to master-jdk21 (with dynamic tagging, slack alert, and polished formatting)

on:
  push:
    branches:
      - master

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout master
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch master-jdk21 branch
        run: git fetch origin master-jdk21

      - name: Check if sync is needed
        id: diffcheck
        run: |
          if git diff --quiet origin/master-jdk21..HEAD; then
            echo "sync_required=false" >> $GITHUB_OUTPUT
          else
            echo "sync_required=true" >> $GITHUB_OUTPUT
          fi

      - name: Collect GitHub usernames from commits
        if: steps.diffcheck.outputs.sync_required == 'true'
        id: collectauthors
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          COMMITS=$(git log --pretty=format:'%H' origin/master-jdk21..HEAD)

          MENTIONS=""
          for sha in $COMMITS; do
            user=$(gh api repos/${{ github.repository }}/commits/$sha --jq '.author.login' || true)
            if [ -n "$user" ]; then
              MENTIONS+="@$user "
            fi
          done

          # Remove duplicates
          MENTIONS=$(echo $MENTIONS | xargs -n1 | sort -u | xargs)

          echo "author_mentions=$MENTIONS" >> $GITHUB_OUTPUT

      - name: Check if PR already exists
        if: steps.diffcheck.outputs.sync_required == 'true'
        id: prcheck
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          pr_url=$(gh pr list --base master-jdk21 --head master --state open --json url -q '.[0].url')
          if [ -n "$pr_url" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "url=$pr_url" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create PR if not exists
        if: steps.prcheck.outputs.exists == 'false'
        id: prcreate
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          pr_output=$(gh pr create \
            --head master \
            --base master-jdk21 \
            --title "Sync: master to master-jdk21" \
            --body "Automated PR to sync latest changes from master to master-jdk21.")
          pr_url=$(echo "$pr_output" | grep -Eo 'https://github\.com/[^ ]+')
          echo "url=$pr_url" >> $GITHUB_OUTPUT

      - name: Define Slack Notification Function
        run: |
          send_sporty_alert() {
            local message="$1"
            curl -X POST -H 'Content-Type: application/json' \
              --data "{\"message\":\"${message}\",\"channel\":\"common-tools_master-to-masterjdk21_sync\"}" \
              "https://sporty-alert-misc.on.sportybet2.com/exchange/message?type=slack&channel=common-tools_master-to-masterjdk21_sync&mentions=true"
          }
          echo "Slack function ready."

      - name: Slack notify - PR created
        if: steps.prcreate.outputs.url != ''
        run: |
          if [ -n "${{ steps.collectauthors.outputs.author_mentions }}" ]; then
            MENTION_LIST=$(for user in ${{ steps.collectauthors.outputs.author_mentions }}; do echo "- $user"; done)
            COMMITTERS_SECTION="*Committers:*\n$MENTION_LIST"
          else
            COMMITTERS_SECTION=""
          fi

          MESSAGE="üÜï *PR Created*: <${{ steps.prcreate.outputs.url }}|Sync master to master-jdk21>

          $COMMITTERS_SECTION
          "
            send_sporty_alert "$MESSAGE"

      - name: Comment and Tag Authors - PR created
        if: steps.prcreate.outputs.url != ''
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [ -n "${{ steps.collectauthors.outputs.author_mentions }}" ]; then
            COMMENT_BODY="### üöÄ Committers Requested for Review
          
            $(for user in ${{ steps.collectauthors.outputs.author_mentions }}; do echo "- $user"; done)
          
            Please review and merge. üôè"
            gh pr comment "${{ steps.prcreate.outputs.url }}" --body "$COMMENT_BODY"
          fi

      - name: Comment on existing PR
        if: steps.prcheck.outputs.exists == 'true'
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          if [ -n "${{ steps.collectauthors.outputs.author_mentions }}" ]; then
            COMMENT_BODY="### üîÑ New commits pushed to open PR
          
            $(for user in ${{ steps.collectauthors.outputs.author_mentions }}; do echo "- $user"; done)
          
            Please review and merge. üôè"
            gh pr comment "${{ steps.prcheck.outputs.url }}" --body "$COMMENT_BODY"
          fi

      - name: Slack notify - Commit pushed to open PR
        if: steps.prcheck.outputs.exists == 'true'
        run: |
          if [ -n "${{ steps.collectauthors.outputs.author_mentions }}" ]; then
            MENTION_LIST=$(for user in ${{ steps.collectauthors.outputs.author_mentions }}; do echo "- $user"; done)
            COMMITTERS_SECTION="*Committers:*\n$MENTION_LIST"
          else
            COMMITTERS_SECTION=""
          fi
          
          MESSAGE="üîÑ *New commit pushed to master*. PR already open: <${{ steps.prcheck.outputs.url }}|View PR>
          
          $COMMITTERS_SECTION
          "
            send_sporty_alert "$MESSAGE"